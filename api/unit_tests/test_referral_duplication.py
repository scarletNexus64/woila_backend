#!/usr/bin/env python3
"""
Test pour v√©rifier s'il y a duplication des bonus de parrainage
"""
import os
import sys
import django
from pathlib import Path

# Setup Django
project_root = Path(__file__).parent
sys.path.append(str(project_root))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'woila_backend.settings')
django.setup()

import logging
from django.contrib.contenttypes.models import ContentType
from api.models import UserDriver, ReferralCode, Wallet, GeneralConfig
from api.services.notification_service import NotificationService
from decimal import Decimal

logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

print('=== TEST DUPLICATION BONUS PARRAINAGE ===')
print()

# 1. V√©rifier la config bonus
try:
    welcome_config = GeneralConfig.objects.get(search_key='WELCOME_BONUS_AMOUNT', active=True)
    bonus_amount = welcome_config.get_numeric_value()
    print(f'üí∞ Bonus configur√©: {bonus_amount} FCFA')
except GeneralConfig.DoesNotExist:
    bonus_amount = 500  # Valeur par d√©faut
    print(f'üí∞ Bonus par d√©faut: {bonus_amount} FCFA')

# 2. R√©cup√©rer le parrain avec le code FF7B4AE2
referral_code = 'FF7B4AE2'
sponsor_referral = ReferralCode.objects.get(code=referral_code, is_active=True)
sponsor_user = UserDriver.objects.get(id=sponsor_referral.user_id)

print(f'üë§ Parrain: {sponsor_user.name} {sponsor_user.surname}')

# V√©rifier le wallet AVANT
sponsor_wallet = Wallet.objects.get(
    user_type=sponsor_referral.user_type,
    user_id=sponsor_referral.user_id
)
initial_balance = sponsor_wallet.balance
print(f'üí∞ Solde initial: {initial_balance} FCFA')

# 3. Simuler plusieurs appels du m√™me bonus (pour d√©tecter duplication)
print()
print('üîÑ TEST: Appels multiples du m√™me bonus...')

for i in range(3):
    print(f'\\nüì§ Appel {i+1} - NotificationService.send_referral_bonus_notification:')
    
    # Cr√©er un utilisateur fictif pour chaque test
    referred_user = UserDriver(
        name=f'TestUser{i}',
        surname=f'Ref{i}',
        phone_number=f'+23799999999{i}',
        id=999 + i  # ID fictif
    )
    
    try:
        success = NotificationService.send_referral_bonus_notification(
            referrer_user=sponsor_user,
            referred_user=referred_user,
            referral_code=referral_code,
            bonus_amount=float(bonus_amount)
        )
        
        # V√©rifier le nouveau solde
        sponsor_wallet.refresh_from_db()
        new_balance = sponsor_wallet.balance
        difference = new_balance - initial_balance
        
        print(f'   ‚û°Ô∏è Succ√®s: {success}')
        print(f'   üí∞ Nouveau solde: {new_balance} FCFA')
        print(f'   üìà Diff√©rence totale: +{difference} FCFA')
        
        # Mettre √† jour pour le prochain test
        initial_balance = new_balance
        
    except Exception as e:
        print(f'   ‚ùå Erreur: {e}')

# 4. V√©rifications
print()
print('‚úÖ ANALYSE:')
final_balance = sponsor_wallet.balance
total_added = final_balance - Wallet.objects.get(
    user_type=sponsor_referral.user_type,
    user_id=sponsor_referral.user_id
).balance

if total_added == 0:
    print('   ‚úÖ Aucun bonus ajout√© (normal si erreurs)')
elif total_added == bonus_amount:
    print(f'   ‚úÖ Un seul bonus de {bonus_amount} FCFA ajout√© - PAS DE DUPLICATION')
elif total_added > bonus_amount:
    multiple = total_added / bonus_amount
    print(f'   ‚ùå DUPLICATION D√âTECT√âE: {multiple}x le bonus ({total_added} FCFA au lieu de {bonus_amount} FCFA)')
else:
    print(f'   ‚ö†Ô∏è Bonus partiel: {total_added} FCFA au lieu de {bonus_amount} FCFA')

print()
print('üîç ENDROITS O√ô LE BONUS EST AJOUT√â:')
print('   1. NotificationService.send_referral_bonus_notification() - ligne 219')
print('   2. RegisterDriverSerializer.create() - ligne 506 (utilise WELCOME_BONUS_AMOUNT)')
print('   3. RegisterCustomerSerializer.create() - ligne 607 (utilise WELCOME_BONUS_AMOUNT)')

print()
print('‚ö†Ô∏è PROBL√àME D√âTECT√â:')
print('   - Les serializers utilisent WELCOME_BONUS_AMOUNT (5000 FCFA)')
print('   - NotificationService ajoute ENCORE le bonus')
print('   - R√©sultat: DOUBLE BONUS = 10000 FCFA au lieu de 5000 FCFA')

print()
print('=== FIN DU TEST ===')