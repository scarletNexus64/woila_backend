# Generated by Django 5.2.6 on 2025-09-30 11:10

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationConfigProxy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_channel', models.CharField(choices=[('sms', 'SMS (Nexah)'), ('whatsapp', 'WhatsApp (Meta)')], max_length=20)),
                ('nexah_base_url', models.CharField(max_length=255)),
                ('nexah_send_endpoint', models.CharField(max_length=100)),
                ('nexah_credits_endpoint', models.CharField(max_length=100)),
                ('nexah_user', models.CharField(max_length=100)),
                ('nexah_password', models.CharField(max_length=100)),
                ('nexah_sender_id', models.CharField(max_length=20)),
                ('whatsapp_api_token', models.TextField()),
                ('whatsapp_api_version', models.CharField(max_length=20)),
                ('whatsapp_phone_number_id', models.CharField(max_length=100)),
                ('whatsapp_template_name', models.CharField(max_length=100)),
                ('whatsapp_language', models.CharField(max_length=10)),
                ('updated_at', models.DateTimeField()),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'verbose_name': '‚öôÔ∏è Configuration de notification',
                'verbose_name_plural': '‚öôÔ∏è Configurations de notification',
                'db_table': 'notification_configs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NotificationProxy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.PositiveIntegerField()),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('notification_type', models.CharField(choices=[('welcome', 'Notification de bienvenue'), ('referral_used', 'Code parrain utilis√©'), ('vehicle_approved', 'V√©hicule approuv√©'), ('system', 'Notification syst√®me'), ('order', 'Commande'), ('other', 'Autre')], max_length=20)),
                ('is_read', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField()),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'üîî Notification',
                'verbose_name_plural': 'üîî Notifications',
                'db_table': 'notifications',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NotificationConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_channel', models.CharField(choices=[('sms', 'SMS (Nexah)'), ('whatsapp', 'WhatsApp (Meta)')], default='sms', max_length=20, verbose_name='Canal de notification par d√©faut')),
                ('nexah_base_url', models.CharField(default='https://api.nexah.net/', max_length=255, verbose_name='URL de base Nexah')),
                ('nexah_send_endpoint', models.CharField(default='api/bulk/send', max_length=100, verbose_name="Endpoint d'envoi Nexah")),
                ('nexah_credits_endpoint', models.CharField(default='api/credits', max_length=100, verbose_name='Endpoint de cr√©dits Nexah')),
                ('nexah_user', models.CharField(blank=True, max_length=100, verbose_name='Utilisateur Nexah')),
                ('nexah_password', models.CharField(blank=True, max_length=100, verbose_name='Mot de passe Nexah')),
                ('nexah_sender_id', models.CharField(default='WOILA', max_length=20, verbose_name='ID exp√©diteur Nexah')),
                ('whatsapp_api_token', models.TextField(blank=True, help_text="Token permanent pour l'API WhatsApp", verbose_name='Token API WhatsApp')),
                ('whatsapp_phone_number_id', models.CharField(blank=True, max_length=50, verbose_name='ID du num√©ro WhatsApp')),
                ('whatsapp_business_id', models.CharField(blank=True, max_length=50, verbose_name='ID Business WhatsApp')),
                ('whatsapp_api_version', models.CharField(default='v18.0', help_text="Version de l'API Graph (ex: v18.0)", max_length=10, verbose_name='Version API WhatsApp')),
                ('whatsapp_template_name', models.CharField(default='otp_verification', help_text='Nom du template approuv√© pour les OTP', max_length=100, verbose_name='Nom du template WhatsApp')),
                ('whatsapp_language', models.CharField(default='en', help_text='Code langue du template (ex: en, fr, fr_FR)', max_length=10, verbose_name='Code langue du template')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Configuration de notification',
                'verbose_name_plural': 'Configurations de notification',
                'db_table': 'notification_configs',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.PositiveIntegerField()),
                ('title', models.CharField(max_length=200, verbose_name='Titre')),
                ('content', models.TextField(verbose_name='Contenu')),
                ('notification_type', models.CharField(choices=[('welcome', 'Notification de bienvenue'), ('referral_used', 'Code parrain utilis√©'), ('vehicle_approved', 'V√©hicule approuv√©'), ('system', 'Notification syst√®me'), ('order', 'Commande'), ('other', 'Autre')], default='system', max_length=20, verbose_name='Type de notification')),
                ('is_read', models.BooleanField(default=False, verbose_name='Lu')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Supprim√©')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Donn√©es suppl√©mentaires (code parrain, ID v√©hicule, etc.)', verbose_name='M√©tadonn√©es')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de cr√©ation')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='Lu le')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Supprim√© le')),
                ('user_type', models.ForeignKey(limit_choices_to=models.Q(models.Q(('app_label', 'users'), ('model', 'userdriver')), models.Q(('app_label', 'users'), ('model', 'usercustomer')), _connector='OR'), on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'db_table': 'notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FCMToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.PositiveIntegerField()),
                ('token', models.TextField(unique=True, verbose_name='Token FCM')),
                ('platform', models.CharField(help_text='android, ios, web, etc.', max_length=20, verbose_name='Plateforme')),
                ('device_id', models.CharField(help_text="Identifiant unique de l'appareil", max_length=255, verbose_name="ID de l'appareil")),
                ('device_info', models.JSONField(blank=True, default=dict, help_text='Version OS, mod√®le, etc.', verbose_name='Informations appareil')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('last_used', models.DateTimeField(blank=True, null=True, verbose_name='Derni√®re utilisation')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de cr√©ation')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Derni√®re modification')),
                ('user_type', models.ForeignKey(limit_choices_to=models.Q(models.Q(('app_label', 'users'), ('model', 'userdriver')), models.Q(('app_label', 'users'), ('model', 'usercustomer')), _connector='OR'), on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Token FCM',
                'verbose_name_plural': 'Tokens FCM',
                'db_table': 'fcm_tokens',
                'ordering': ['-created_at'],
                'unique_together': {('user_type', 'user_id', 'device_id')},
            },
        ),
    ]
