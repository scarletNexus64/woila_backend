# Generated by Django 5.2.6 on 2025-09-30 10:47

import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='OTPProxy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(max_length=100)),
                ('otp', models.CharField(max_length=4)),
                ('created_at', models.DateTimeField()),
                ('is_verified', models.BooleanField()),
            ],
            options={
                'verbose_name': 'üì± Code OTP',
                'verbose_name_plural': 'üì± Codes OTP',
                'db_table': 'otps',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReferralCodeProxy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('code', models.CharField(max_length=8)),
                ('created_at', models.DateTimeField()),
                ('is_active', models.BooleanField()),
            ],
            options={
                'verbose_name': 'üéÅ Code de parrainage',
                'verbose_name_plural': 'üéÅ Codes de parrainage',
                'db_table': 'referral_codes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OTPVerification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=15)),
                ('otp_code', models.CharField(max_length=6)),
                ('user_type', models.CharField(choices=[('driver', 'Driver'), ('customer', 'Customer')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('is_verified', models.BooleanField(default=False)),
                ('attempts', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'V√©rification OTP',
                'verbose_name_plural': 'V√©rifications OTP',
                'db_table': 'otp_verifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReferralCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True)),
                ('driver_id', models.IntegerField(unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('used_count', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Code de parrainage',
                'verbose_name_plural': 'Codes de parrainage',
                'db_table': 'referral_codes',
            },
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('user_type', models.CharField(choices=[('driver', 'Driver'), ('customer', 'Customer')], max_length=10)),
                ('user_id', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Token',
                'verbose_name_plural': 'Tokens',
                'db_table': 'auth_tokens',
                'unique_together': {('user_type', 'user_id')},
            },
        ),
    ]
