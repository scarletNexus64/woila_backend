# Generated by Django 5.2.4 on 2025-07-27 20:25

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('api', '0014_alter_vipzonekilometerrule_options_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='DriverStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('OFFLINE', 'Hors ligne'), ('ONLINE', 'En ligne'), ('BUSY', 'Occupé')], default='OFFLINE', max_length=10, verbose_name='Statut')),
                ('current_latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True, verbose_name='Latitude actuelle')),
                ('current_longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True, verbose_name='Longitude actuelle')),
                ('last_location_update', models.DateTimeField(blank=True, null=True, verbose_name='Dernière MAJ position')),
                ('websocket_channel', models.CharField(blank=True, max_length=255, null=True, verbose_name='Canal WebSocket')),
                ('last_online', models.DateTimeField(blank=True, null=True, verbose_name='Dernière connexion')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Mis à jour le')),
                ('driver', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='status', to='api.userdriver')),
            ],
            options={
                'verbose_name': 'Statut Chauffeur',
                'verbose_name_plural': 'Statuts Chauffeurs',
                'db_table': 'driver_status',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('pickup_address', models.TextField(verbose_name='Adresse de départ')),
                ('pickup_latitude', models.DecimalField(decimal_places=8, max_digits=10, verbose_name='Latitude départ')),
                ('pickup_longitude', models.DecimalField(decimal_places=8, max_digits=11, verbose_name='Longitude départ')),
                ('destination_address', models.TextField(verbose_name='Adresse de destination')),
                ('destination_latitude', models.DecimalField(decimal_places=8, max_digits=10, verbose_name='Latitude destination')),
                ('destination_longitude', models.DecimalField(decimal_places=8, max_digits=11, verbose_name='Longitude destination')),
                ('estimated_distance_km', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Distance estimée (km)')),
                ('actual_distance_km', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Distance réelle (km)')),
                ('base_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Prix de base')),
                ('distance_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Prix distance')),
                ('vehicle_additional_price', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Prix additionnel véhicule')),
                ('city_price', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Prix ville')),
                ('vip_zone_price', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Prix zone VIP')),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Prix total')),
                ('is_night_fare', models.BooleanField(default=False, verbose_name='Tarif nuit')),
                ('status', models.CharField(choices=[('PENDING', 'En attente'), ('ACCEPTED', 'Acceptée'), ('IN_PROGRESS', 'En cours'), ('COMPLETED', 'Terminée'), ('CANCELLED', 'Annulée')], default='PENDING', max_length=20, verbose_name='Statut')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créée le')),
                ('accepted_at', models.DateTimeField(blank=True, null=True, verbose_name='Acceptée le')),
                ('started_at', models.DateTimeField(blank=True, null=True, verbose_name='Démarrée le')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Terminée le')),
                ('cancelled_at', models.DateTimeField(blank=True, null=True, verbose_name='Annulée le')),
                ('customer_notes', models.TextField(blank=True, verbose_name='Notes client')),
                ('driver_notes', models.TextField(blank=True, verbose_name='Notes chauffeur')),
                ('cancellation_reason', models.TextField(blank=True, verbose_name="Raison d'annulation")),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.city', verbose_name='Ville')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='api.usercustomer')),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='api.userdriver')),
                ('vehicle_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.vehicletype', verbose_name='Type de véhicule')),
                ('vip_zone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.vipzone', verbose_name='Zone VIP')),
            ],
            options={
                'verbose_name': 'Commande',
                'verbose_name_plural': 'Commandes',
                'db_table': 'orders',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderTracking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('ORDER_CREATED', 'Commande créée'), ('DRIVER_ASSIGNED', 'Chauffeur assigné'), ('DRIVER_ARRIVED', 'Chauffeur arrivé'), ('TRIP_STARTED', 'Course démarrée'), ('TRIP_COMPLETED', 'Course terminée'), ('ORDER_CANCELLED', 'Commande annulée'), ('LOCATION_UPDATE', 'MAJ position')], max_length=20, verbose_name="Type d'événement")),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='Métadonnées')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tracking_events', to='order.order')),
            ],
            options={
                'verbose_name': 'Suivi Commande',
                'verbose_name_plural': 'Suivi Commandes',
                'db_table': 'order_tracking',
                'ordering': ['-created_at'],
            },
        ),
    ]
