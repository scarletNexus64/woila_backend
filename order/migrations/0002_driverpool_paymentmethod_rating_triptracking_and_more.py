# Generated by Django 5.2.4 on 2025-08-17 12:25

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0021_remove_usercustomer_name_and_more'),
        ('order', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DriverPool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority_order', models.IntegerField(help_text='1 = premier appelé, 2 = deuxième, etc.', verbose_name='Ordre de priorité')),
                ('distance_km', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Distance du client (km)')),
                ('request_status', models.CharField(choices=[('PENDING', 'En attente'), ('ACCEPTED', 'Accepté'), ('REJECTED', 'Refusé'), ('TIMEOUT', 'Timeout'), ('CANCELLED', 'Annulé')], default='PENDING', max_length=20, verbose_name='Statut de la requête')),
                ('requested_at', models.DateTimeField(auto_now_add=True, verbose_name='Demandé le')),
                ('responded_at', models.DateTimeField(blank=True, null=True, verbose_name='Répondu le')),
                ('timeout_at', models.DateTimeField(verbose_name='Timeout le')),
                ('response_time_seconds', models.IntegerField(blank=True, null=True, verbose_name='Temps de réponse (secondes)')),
                ('rejection_reason', models.CharField(blank=True, max_length=255, verbose_name='Raison du refus')),
            ],
            options={
                'verbose_name': 'Pool Chauffeur',
                'verbose_name_plural': 'Pool Chauffeurs',
                'db_table': 'driver_pool',
                'ordering': ['order', 'priority_order'],
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('CASH', 'Espèces'), ('OM', 'Orange Money'), ('MOMO', 'MTN Mobile Money'), ('WALLET', 'Portefeuille')], max_length=20, unique=True, verbose_name='Type de paiement')),
                ('name', models.CharField(max_length=100, verbose_name='Nom affiché')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('icon', models.CharField(blank=True, max_length=255, verbose_name='Icône')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('min_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Montant minimum')),
                ('max_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Montant maximum')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Mis à jour le')),
            ],
            options={
                'verbose_name': 'Méthode de paiement',
                'verbose_name_plural': 'Méthodes de paiement',
                'db_table': 'payment_methods',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating_type', models.CharField(choices=[('DRIVER_TO_CUSTOMER', 'Chauffeur → Client'), ('CUSTOMER_TO_DRIVER', 'Client → Chauffeur')], max_length=20, verbose_name='Type de notation')),
                ('score', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Note (1-5 étoiles)')),
                ('comment', models.TextField(blank=True, verbose_name='Commentaire')),
                ('punctuality', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Ponctualité')),
                ('driving_quality', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Qualité de conduite')),
                ('vehicle_cleanliness', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Propreté du véhicule')),
                ('communication', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Communication')),
                ('tags', models.JSONField(blank=True, default=list, help_text="Ex: ['Ponctuel', 'Véhicule propre', 'Conduite sûre']", verbose_name='Tags')),
                ('is_anonymous', models.BooleanField(default=False, verbose_name='Note anonyme')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Mis à jour le')),
            ],
            options={
                'verbose_name': 'Notation',
                'verbose_name_plural': 'Notations',
                'db_table': 'ratings',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TripTracking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.DecimalField(decimal_places=8, max_digits=10, verbose_name='Latitude')),
                ('longitude', models.DecimalField(decimal_places=8, max_digits=11, verbose_name='Longitude')),
                ('speed_kmh', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Vitesse (km/h)')),
                ('heading', models.IntegerField(blank=True, null=True, verbose_name='Direction (0-359°)')),
                ('accuracy', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Précision GPS (mètres)')),
                ('order_status', models.CharField(choices=[('DRAFT', 'Brouillon'), ('PENDING', 'En attente'), ('ACCEPTED', 'Acceptée'), ('DRIVER_ARRIVED', 'Chauffeur arrivé'), ('IN_PROGRESS', 'En cours'), ('COMPLETED', 'Terminée'), ('CANCELLED', 'Annulée')], max_length=20, verbose_name='Statut de la commande')),
                ('recorded_at', models.DateTimeField(auto_now_add=True, verbose_name='Enregistré le')),
            ],
            options={
                'verbose_name': 'Suivi GPS',
                'verbose_name_plural': 'Suivis GPS',
                'db_table': 'trip_tracking',
                'ordering': ['order', 'recorded_at'],
            },
        ),
        migrations.AddField(
            model_name='driverstatus',
            name='session_started_at',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Session démarrée le'),
        ),
        migrations.AddField(
            model_name='driverstatus',
            name='total_earnings_today',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name="Gains aujourd'hui"),
        ),
        migrations.AddField(
            model_name='driverstatus',
            name='total_orders_today',
            field=models.IntegerField(default=0, verbose_name="Commandes aujourd'hui"),
        ),
        migrations.AddField(
            model_name='order',
            name='customer_rating',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Note du client (1-5)'),
        ),
        migrations.AddField(
            model_name='order',
            name='driver_arrived_at',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Chauffeur arrivé le'),
        ),
        migrations.AddField(
            model_name='order',
            name='driver_rating',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Note du chauffeur (1-5)'),
        ),
        migrations.AddField(
            model_name='order',
            name='final_price',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Prix final ajusté'),
        ),
        migrations.AddField(
            model_name='order',
            name='paid_at',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Payée le'),
        ),
        migrations.AddField(
            model_name='order',
            name='payment_status',
            field=models.CharField(choices=[('PENDING', 'En attente'), ('PROCESSING', 'En traitement'), ('PAID', 'Payé'), ('FAILED', 'Échoué'), ('REFUNDED', 'Remboursé')], default='PENDING', max_length=20, verbose_name='Statut du paiement'),
        ),
        migrations.AddField(
            model_name='order',
            name='waiting_price',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Prix attente'),
        ),
        migrations.AddField(
            model_name='order',
            name='waiting_time',
            field=models.IntegerField(default=0, help_text="Temps d'attente du client après l'arrivée du chauffeur", verbose_name="Temps d'attente (minutes)"),
        ),
        migrations.AddField(
            model_name='ordertracking',
            name='customer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.usercustomer'),
        ),
        migrations.AddField(
            model_name='ordertracking',
            name='driver',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.userdriver'),
        ),
        migrations.AlterField(
            model_name='order',
            name='status',
            field=models.CharField(choices=[('DRAFT', 'Brouillon'), ('PENDING', 'En attente'), ('ACCEPTED', 'Acceptée'), ('DRIVER_ARRIVED', 'Chauffeur arrivé'), ('IN_PROGRESS', 'En cours'), ('COMPLETED', 'Terminée'), ('CANCELLED', 'Annulée')], default='DRAFT', max_length=20, verbose_name='Statut'),
        ),
        migrations.AlterField(
            model_name='order',
            name='total_price',
            field=models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Prix total estimé'),
        ),
        migrations.AlterField(
            model_name='ordertracking',
            name='event_type',
            field=models.CharField(choices=[('ORDER_CREATED', 'Commande créée'), ('DRIVER_SEARCH_STARTED', 'Recherche chauffeur démarrée'), ('DRIVER_NOTIFIED', 'Chauffeur notifié'), ('DRIVER_ACCEPTED', 'Chauffeur a accepté'), ('DRIVER_REJECTED', 'Chauffeur a refusé'), ('DRIVER_ASSIGNED', 'Chauffeur assigné'), ('DRIVER_EN_ROUTE', 'Chauffeur en route'), ('DRIVER_ARRIVED', 'Chauffeur arrivé'), ('TRIP_STARTED', 'Course démarrée'), ('TRIP_COMPLETED', 'Course terminée'), ('ORDER_CANCELLED', 'Commande annulée'), ('PAYMENT_INITIATED', 'Paiement initié'), ('PAYMENT_COMPLETED', 'Paiement complété'), ('PAYMENT_FAILED', 'Paiement échoué'), ('RATING_SUBMITTED', 'Note soumise'), ('LOCATION_UPDATE', 'MAJ position')], max_length=30, verbose_name="Type d'événement"),
        ),
        migrations.AddIndex(
            model_name='driverstatus',
            index=models.Index(fields=['status'], name='driver_stat_status_9ca853_idx'),
        ),
        migrations.AddIndex(
            model_name='driverstatus',
            index=models.Index(fields=['current_latitude', 'current_longitude'], name='driver_stat_current_3eac3e_idx'),
        ),
        migrations.AddIndex(
            model_name='ordertracking',
            index=models.Index(fields=['order', '-created_at'], name='order_track_order_i_5a6800_idx'),
        ),
        migrations.AddIndex(
            model_name='ordertracking',
            index=models.Index(fields=['event_type'], name='order_track_event_t_062397_idx'),
        ),
        migrations.AddField(
            model_name='driverpool',
            name='driver',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pool_requests', to='api.userdriver'),
        ),
        migrations.AddField(
            model_name='driverpool',
            name='order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='driver_pool', to='order.order'),
        ),
        migrations.AddField(
            model_name='order',
            name='payment_method',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='order.paymentmethod', verbose_name='Méthode de paiement'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['-created_at'], name='orders_created_b25042_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['status'], name='orders_status_762191_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['customer'], name='orders_custome_6c3a7f_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['driver'], name='orders_driver__f31fef_idx'),
        ),
        migrations.AddField(
            model_name='rating',
            name='order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='order.order'),
        ),
        migrations.AddField(
            model_name='rating',
            name='rated_customer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ratings_received', to='api.usercustomer'),
        ),
        migrations.AddField(
            model_name='rating',
            name='rated_driver',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ratings_received', to='api.userdriver'),
        ),
        migrations.AddField(
            model_name='rating',
            name='rater',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ratings_given', to='api.userdriver'),
        ),
        migrations.AddField(
            model_name='triptracking',
            name='driver',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trip_tracking', to='api.userdriver'),
        ),
        migrations.AddField(
            model_name='triptracking',
            name='order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trip_tracking', to='order.order'),
        ),
        migrations.AddIndex(
            model_name='driverpool',
            index=models.Index(fields=['order', 'priority_order'], name='driver_pool_order_i_86c22f_idx'),
        ),
        migrations.AddIndex(
            model_name='driverpool',
            index=models.Index(fields=['request_status'], name='driver_pool_request_246954_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='driverpool',
            unique_together={('order', 'driver')},
        ),
        migrations.AlterUniqueTogether(
            name='rating',
            unique_together={('order', 'rating_type')},
        ),
        migrations.AddIndex(
            model_name='triptracking',
            index=models.Index(fields=['order', 'recorded_at'], name='trip_tracki_order_i_d1cfe3_idx'),
        ),
        migrations.AddIndex(
            model_name='triptracking',
            index=models.Index(fields=['latitude', 'longitude'], name='trip_tracki_latitud_9e308f_idx'),
        ),
    ]
